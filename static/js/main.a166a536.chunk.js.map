{"version":3,"sources":["actions/index.js","componets/Menu.js","componets/Landing.js","firebase.js","customFunctions.js","componets/AddNewTask.js","componets/Tasks.js","componets/SignIn.js","componets/SignUp.js","App.js","serviceWorker.js","reducers/addNewTask.js","reducers/isLogged.js","reducers/saveUserInStore.js","reducers/allUserTasks.js","reducers/index.js","config/store.js","index.js"],"names":["getTasks","props","type","payload","Menu","isLogged","useSelector","state","dispatch","useDispatch","Navbar","bg","variant","Brand","href","Nav","className","Link","onClick","Collapse","Landing","saveUserInStore","allUserTasks","useState","numOfTasks","setNumOfTusk","completed","setCompleted","inProgres","setInProgres","useEffect","length","map","task","console","log","taskInfo","name","lastname","Button","align","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","getCollectionWhere","collection","field","operator","value","Promise","res","rej","where","get","then","snapsot","data","docs","doc","id","catch","error","AddNewTask","title","setTitle","deskribe","setDeskribe","gettodos","onSubmit","evt","preventDefault","taskData","userId","set","addNewTaskToDB","placeholder","onChange","e","target","Tasks","todos","Table","striped","bordered","hover","item","index","key","delete","SignIn","user","setUser","errorUser","setErrorUser","errorPass","setErrorPass","email","setEmail","password","setPassword","Form","saveUserInLocalStore","setTimeout","checkUser","Alert","Group","controlId","Label","Control","SignUp","setName","lastName","setLastName","password2","setPassword2","emailUsed","setEmailUsed","passwordMatch","setPasswordMatch","checkPasswords","checkEmail","addNewUserToDB","window","location","hash","Row","Col","App","basename","path","component","exact","Boolean","hostname","match","addNewTask","action","allReducers","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","loadFromLocalStorage","store","createStore","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a166a536.chunk.js","sourcesContent":["export const login = () => {\r\n    return {\r\n        type: \"SIGN_IN\"\r\n    }\r\n}\r\n\r\nexport const addNewTask = (props) => {\r\n    return {\r\n        type: \"ADD_TASK\",\r\n        payload: props\r\n    }\r\n}\r\n\r\nexport const saveUserInLocalStore = (props) => {\r\n    return {\r\n        type: \"SAVE_USER_IN_STORE\",\r\n        payload: props\r\n    }\r\n}\r\n\r\nexport const getTasks = (props) => {\r\n    return {\r\n        type: \"GET_ALL_USER_TASKS\",\r\n        payload: props\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport '../styles/Menu.scss'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { login } from '../actions';\r\n\r\nexport default function Menu() {\r\n    const isLogged = useSelector(state => state.isLogged);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Navbar bg=\"primary\" variant=\"dark\">\r\n            <Navbar.Brand href=\"#home\">Tasker</Navbar.Brand>\r\n            \r\n            {isLogged \r\n                ? \r\n                <>\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/\">Home</Nav.Link>\r\n                        <Nav.Link href=\"#/Tasks\">Tasks</Nav.Link>\r\n                    </Nav>\r\n                    <Nav.Link href=\"\" onClick={() => dispatch(login())} className='navLink'>Log Out</Nav.Link>\r\n                </>\r\n                : \r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Nav.Link href=\"#/SignIn\" className='navLink'>Sign In</Nav.Link>\r\n                        <Nav.Link href=\"#/SignUp\" className='navLink'>Sign Up</Nav.Link>\r\n                    </Navbar.Collapse>\r\n            }\r\n        </Navbar>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button } from 'react-bootstrap';\r\nimport '../styles/Landing.scss'\r\n\r\n\r\nexport default function Landing() {\r\n    const isLogged = useSelector(state => state.isLogged);\r\n    const saveUserInStore = useSelector(state => state.saveUserInStore);\r\n    const allUserTasks = useSelector(state => state.allUserTasks);\r\n\r\n    const [numOfTasks, setNumOfTusk] = useState(0);\r\n    const [completed, setCompleted] = useState(0);\r\n    const [inProgres, setInProgres] = useState(0);\r\n\r\n    const taskInfo = () =>{\r\n        setNumOfTusk(allUserTasks.length)\r\n        let completed = 0;\r\n        let inProgres = 0;\r\n\r\n        allUserTasks.map(task => {\r\n            console.log(task)\r\n            if(task.completed){\r\n                completed++\r\n            } else{ \r\n                inProgres++\r\n            }\r\n        })\r\n        setCompleted(completed)\r\n        setInProgres(inProgres)\r\n    }\r\n    \r\n    useEffect(() => taskInfo(),[])\r\n    return (\r\n        <div>\r\n            {!isLogged \r\n                ? \r\n                <h1 align='center'>Please sign in</h1>\r\n                : \r\n                <div className='mainInfoBlock'>\r\n                <div className='infoBlock'>\r\n                    <h1>Welcome back {saveUserInStore.name} {saveUserInStore.lastname}!</h1>\r\n                    <h2>\r\n                        You have {numOfTasks} tasks:<br/>\r\n                        <div className='lime'>{completed} - completed</div> \r\n                        and\r\n                        <div className='yellow'>{inProgres} - in progress</div>\r\n                    </h2>\r\n                    <br/>\r\n                    <Button type='allert'>Show my tasks</Button>\r\n                </div>\r\n                </div>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD1LAf3dzSq_SHuYb2qcWViMYJTXCJZDEM\",\r\n    authDomain: \"tasker-92659.firebaseapp.com\",\r\n    databaseURL: \"https://tasker-92659.firebaseio.com\",\r\n    projectId: \"tasker-92659\",\r\n    storageBucket: \"tasker-92659.appspot.com\",\r\n    messagingSenderId: \"793570878669\",\r\n    appId: \"1:793570878669:web:520dc0a5b1dc5011187584\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport { db };","import { db } from './firebase';\r\n\r\nexport const getCollectionWhere = (collection, field, operator, value) => {\r\n\r\n    return new Promise((res, rej) => {\r\n        db.collection(collection).where(field, operator, value)\r\n        .get()\r\n        .then(snapsot => {\r\n            const data = snapsot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }))\r\n            res(data)\r\n        })\r\n        .catch(error => {\r\n            rej(error)\r\n        });\r\n    })\r\n\r\n}\r\n\r\nexport const addNewUserToDB = (name, lastName, email, password) => {\r\n    db.collection(\"Users\").doc().set({\r\n        name: name,\r\n        lastName: lastName,\r\n        email: email,\r\n        password: password\r\n    })\r\n    .then(function() {\r\n        console.log(\"User successfully added!\");\r\n    })\r\n    .catch(function(error) {\r\n        console.error(\"Error adding user: \", error);\r\n    });\r\n}\r\n\r\nexport const addNewTaskToDB = (userId, title, deskribe) => {\r\n    db.collection(\"todos\").doc().set({\r\n        userId: userId,\r\n        title: title,\r\n        deskribe: deskribe\r\n    })\r\n    .then(function() {\r\n        console.log(\"Task successfully added!\");\r\n    })\r\n    .catch(function(error) {\r\n        console.error(\"Error adding task: \", error);\r\n    });\r\n}\r\n\r\n","import React,  { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addNewTask, getTasks } from '../actions';\r\nimport { addNewTaskToDB, getCollectionWhere } from '../customFunctions';\r\n\r\nexport default function AddNewTask() {\r\n\r\n    \r\n    const saveUserInStore = useSelector(state => state.saveUserInStore);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [deskribe, setDeskribe] = useState(\"\");\r\n  \r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        console.log(`Title - ${title}. Deskribe - ${deskribe}.`)\r\n        const taskData = {title, deskribe, userId: saveUserInStore.id}\r\n        dispatch(addNewTask(taskData))\r\n        //add task to firebase\r\n        addNewTaskToDB(saveUserInStore.id, title, deskribe);\r\n        gettodos()\r\n    }\r\n\r\n    const gettodos = () => {\r\n        const alltodos = getCollectionWhere('todos', 'userId', '==', saveUserInStore.id)\r\n        alltodos.then(\r\n            res => {\r\n                console.log(res)\r\n                dispatch(getTasks(res))\r\n            },\r\n            rej => {\r\n                console.log(rej)\r\n            }\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type='text' \r\n                    placeholder='task title' \r\n                    value={title} \r\n                    onChange={e => setTitle(e.target.value)}\r\n                />\r\n\r\n                <input \r\n                    type='text' \r\n                    placeholder='task deskribe' \r\n                    value={deskribe} \r\n                    onChange={e => setDeskribe(e.target.value)}\r\n                />\r\n\r\n                <button type='submit'>Add new task</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport AddNewTask from './AddNewTask';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getTasks } from '../actions';\r\nimport { getCollectionWhere } from '../customFunctions';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport { db } from '../firebase';\r\n\r\n\r\nexport default function Tasks() {\r\n    const saveUserInStore = useSelector(state => state.saveUserInStore);\r\n    const allUserTasks = useSelector(state => state.allUserTasks);\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        db.collection('todos').where('userId', '==', saveUserInStore.id)\r\n        .get()\r\n        .then(snapsot => {\r\n            const todos = snapsot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }))\r\n            dispatch(getTasks(todos))\r\n        })\r\n        .catch(error => {\r\n            console.log('error getting doc:', error)\r\n        });\r\n        \r\n    }, []);\r\n    \r\n    const deleteTask = (id) => {\r\n        db.collection(\"todos\").doc(id).delete()\r\n        .then(function() {\r\n            console.log(\"Task successfully deleted!\");\r\n            gettodos()   \r\n        }).catch(function(error) {\r\n            console.error(\"Error removing task: \", error);\r\n        });\r\n    }\r\n\r\n    const gettodos = () => {\r\n        const alltodos = getCollectionWhere('todos', 'userId', '==', saveUserInStore.id)\r\n        alltodos.then(\r\n            res => {\r\n                console.log(res)\r\n                dispatch(getTasks(res))\r\n            },\r\n            rej => {\r\n                console.log(rej)\r\n            }\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 align=\"center\">Tasks</h1>\r\n            {console.log(allUserTasks)}\r\n            <AddNewTask/>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Title</th>\r\n                        <th>Deskribe</th>\r\n                        <th>Delete task</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {allUserTasks.map((item,index) => \r\n                        <tr key={index}>\r\n                            <td>{index}</td>\r\n                            <td>{item.title}</td>\r\n                            <td>{item.deskribe}</td>\r\n                            <td><Button variant=\"danger\" value={item.id} onClick={e => deleteTask(e.target.value)}>Delete</Button></td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport {Form, Button, Alert} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { login, saveUserInLocalStore } from '../actions';\r\nimport '../styles/SignIn.scss'\r\nimport { db } from '../firebase';\r\n\r\nexport default function SignIn(props) {\r\n    const isLogged = useSelector(state => state.isLogged);\r\n    const saveUserInStore = useSelector(state => state.saveUserInStore);\r\n    const dispatch = useDispatch();\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [errorUser, setErrorUser] = useState(false);\r\n    const [errorPass, setErrorPass] = useState(false);\r\n    const [email, setEmail] = useState(null);\r\n    const [password, setPassword] = useState(null);\r\n\r\n\r\n    //Get all users with that email\r\n    const checkUser = (email) => {\r\n        db.collection('Users').where(\"email\", \"==\", email)\r\n        .get()\r\n        .then(snapsot => {\r\n            const user = snapsot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }))\r\n            setUser(user);\r\n            //console.log(user)\r\n\r\n            //check email and password\r\n            if(user.length > 0){\r\n                console.log('user finded');\r\n\r\n                if(user[0].password === password){\r\n                    console.log('good password')\r\n                    console.log(user)\r\n                    \r\n                    dispatch(login())\r\n                    dispatch(saveUserInLocalStore(user[0]))\r\n                    //window.location.hash = '#/Tasks';\r\n                }else{\r\n                    setErrorPass(true)\r\n                    setTimeout(()=>{setErrorPass(false)}, 3000)\r\n                }\r\n\r\n            }else{\r\n                console.log('user not finded');\r\n                setErrorUser(true)\r\n                setTimeout(()=>{setErrorUser(false)}, 3000)\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log('error getting doc:', error)\r\n        }); \r\n    }\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        console.log('try to sign in...', email, password);\r\n        checkUser(email)\r\n    }\r\n    return (\r\n        <div>\r\n            {console.log(user)}\r\n            {!isLogged ? (\r\n                <Form className=\"signIn\" onSubmit={handleSubmit}>\r\n                    <h1 align=\"center\">Sign In</h1>\r\n\r\n                    { errorUser \r\n                        ?  \r\n                        <Alert variant=\"danger\">\r\n                            User with that email not found!\r\n                        </Alert> \r\n                        : ''\r\n                    }\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\" \r\n                            placeholder=\"Enter email\" \r\n                            onChange={ e =>{setEmail(e.target.value)}}/>\r\n                    </Form.Group>\r\n\r\n\r\n                    { errorPass \r\n                        ?  \r\n                        <Alert variant=\"danger\">\r\n                           Wrong password!\r\n                        </Alert> \r\n                        : ''\r\n                    }\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            onChange={ e => {setPassword(e.target.value)}}/>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            ) : <h1 align=\"center\">You already logged as {saveUserInStore.name} {saveUserInStore.lastname}</h1>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport {Form, Button, Row, Col, Alert} from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport { getCollectionWhere, addNewUserToDB } from '../customFunctions';\r\nimport '../styles/SignUp.scss';\r\n\r\nexport default function SignUp() {\r\n    const isLogged = useSelector(state => state.isLogged);\r\n\r\n    const [name, setName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState(null)\r\n    const [password2, setPassword2] = useState(null)\r\n\r\n    const [emailUsed, setEmailUsed] = useState(true)\r\n    const [passwordMatch, setPasswordMatch] = useState(true)\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        console.log(`Sign Up User - ${name} ${lastName} with email ${email} and pasword ${password}`);\r\n        if(checkPasswords()){\r\n            console.log('pass much')\r\n           \r\n        }else{\r\n            console.log('pass not mucth')\r\n            setPasswordMatch(false)\r\n            setTimeout(()=>{setPasswordMatch(true)}, 3500)\r\n        }\r\n        checkEmail();\r\n\r\n    }\r\n\r\n    const checkPasswords = () => {\r\n        if(password === password2 && password !== null && password2 !== null) return true\r\n        return false\r\n    }\r\n    const checkEmail = () => {\r\n        const userWithThatEmail = getCollectionWhere('Users', 'email', '==', email);\r\n        userWithThatEmail\r\n        .then(\r\n            res => {\r\n                if(res.length > 0){\r\n                    setEmailUsed(false)\r\n                    setTimeout(()=>{setEmailUsed(true)}, 3500)\r\n                   \r\n                } else{\r\n                    const passGood = checkPasswords();\r\n                    if(passGood){\r\n                        console.log('registring new user')\r\n                        addNewUserToDB(name, lastName, email, password);\r\n                        window.location.hash = '#/SignIn'\r\n                    }\r\n                }\r\n            }\r\n        )\r\n        .catch(\r\n            rej => console.log(rej)\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            {!isLogged ? (\r\n                <Form className=\"signIn\" onSubmit={handleSubmit}>\r\n                    <h1 align=\"center\">Sign Up</h1>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Label>First name</Form.Label>\r\n                            <Form.Control \r\n                                placeholder=\"First name\"\r\n                                type=\"text\"\r\n                                onChange={ e =>{setName(e.target.value)}} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Label>Last name</Form.Label>\r\n                            <Form.Control \r\n                                placeholder=\"Last name\" \r\n                                type=\"text\"\r\n                                onChange={ e =>{setLastName(e.target.value)}}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    { !emailUsed \r\n                        ?  \r\n                        <Alert variant=\"danger\">\r\n                            User with this email already registred!\r\n                        </Alert> \r\n                        : ''\r\n                    }\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            onChange={ e =>{setEmail(e.target.value)}}\r\n                         />\r\n                    </Form.Group>\r\n\r\n                    { !passwordMatch \r\n                        ?  \r\n                        <Alert variant=\"danger\">\r\n                            Password didn't mutch!\r\n                        </Alert> \r\n                        : ''\r\n                    }\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"password\" \r\n                                    placeholder=\"Password\"\r\n                                    onChange={ e =>{setPassword(e.target.value)}} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group controlId=\"formBasicPassword2\">\r\n                                <Form.Label>Submit password</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"password\" \r\n                                    placeholder=\"Type a password again\" \r\n                                    onChange={ e =>{setPassword2(e.target.value)}}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            ) : <h1>You already logged in</h1>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Menu from \"./componets/Menu\";\nimport Landing from \"./componets/Landing\";\nimport Tasks from \"./componets/Tasks\";\nimport SignIn from \"./componets/SignIn\";\nimport SignUp from \"./componets/SignUp\";\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n        <Route path='/' component={Menu}/>\n        <Route exact path='/' component={Landing}/>\n        <Route exact path='/Tasks' component={Tasks}/>\n        <Route exact path='/SignIn' component={SignIn}/>\n        <Route exact path='/SignUp' component={SignUp}/>\n    </HashRouter>        \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const addNewTask = (state = {}, action) => {\r\n    switch(action.type){\r\n        case 'ADD_TASK': \r\n            state = action.payload\r\n            return state\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default addNewTask;","const isLogged = (state = false, action) => {\r\n    switch(action.type){\r\n        case 'SIGN_IN': \r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default isLogged;","const saveUserInLocalStore = (state = [], action) => {\r\n    switch(action.type){\r\n        case 'SAVE_USER_IN_STORE': \r\n            state =  action.payload\r\n            return state\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default saveUserInLocalStore;","const allUserTasks = (state = [], action) => {\r\n    switch(action.type){\r\n        case 'GET_ALL_USER_TASKS': \r\n            state = action.payload\r\n            return state\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default allUserTasks;","import {combineReducers} from 'redux';\r\nimport addNewTask from './addNewTask';\r\nimport isLogged from './isLogged';\r\nimport saveUserInStore from './saveUserInStore';\r\nimport allUserTasks from './allUserTasks';\r\n\r\nconst allReducers = combineReducers({\r\n    addNewTask,\r\n    isLogged,\r\n    saveUserInStore,\r\n    allUserTasks\r\n})\r\n\r\nexport default allReducers;","import { createStore } from 'redux';\r\nimport allReducers from '../reducers/index';\r\n\r\nfunction saveToLocalStorage(state){\r\n    try{\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    } catch(e){\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nfunction loadFromLocalStorage(){\r\n    try{\r\n        const serializedState = localStorage.getItem('state');\r\n        if(serializedState === null)return undefined\r\n        return JSON.parse(serializedState)\r\n    } catch(e){\r\n        console.log(e)\r\n        return undefined\r\n    }  \r\n}\r\n\r\nconst persistedState = loadFromLocalStorage()\r\n\r\nconst store = createStore(\r\n    allReducers,\r\n    persistedState\r\n);\r\n\r\nstore.subscribe(()=>saveToLocalStorage(store.getState()))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './config/store';\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}