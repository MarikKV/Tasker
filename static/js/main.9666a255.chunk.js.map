{"version":3,"sources":["actions/index.js","componets/Menu.js","componets/Landing.js","firebase.js","customFunctions.js","componets/AddNewTask.js","componets/Tasks.js","componets/SignIn.js","componets/SignUp.js","componets/Home.js","App.js","serviceWorker.js","reducers/addNewTask.js","reducers/isLogged.js","reducers/saveUserInStore.js","reducers/allUserTasks.js","reducers/index.js","config/store.js","index.js"],"names":["getTasks","props","type","payload","Menu","isLogged","useSelector","state","dispatch","useDispatch","Navbar","bg","variant","className","Brand","href","Nav","Link","onClick","Collapse","Landing","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","getCollectionWhere","collection","field","operator","value","Promise","res","rej","where","get","then","snapsot","data","docs","map","doc","id","catch","error","AddNewTask","saveUserInStore","useState","title","setTitle","describe","setDescribe","gettodos","console","log","Form","onSubmit","evt","preventDefault","taskData","userId","set","status","addNewTaskToDB","Label","Control","onChange","e","target","as","rows","Button","Tasks","show","setShow","handleClose","edit_id","setId","edit_title","edit_describe","edit_status","setStatus","allUserTasks","showForm","setShowForn","useEffect","todos","editTask","exists","err","align","name","lastname","Table","striped","bordered","hover","item","index","key","delete","Modal","onHide","Header","closeButton","Title","Body","k","Footer","update","SignIn","user","setUser","errorUser","setErrorUser","errorPass","setErrorPass","email","setEmail","password","setPassword","length","saveUserInLocalStore","window","location","hash","setTimeout","checkUser","Alert","Group","controlId","placeholder","SignUp","setName","lastName","setLastName","password2","setPassword2","emailUsed","setEmailUsed","passwordMatch","setPasswordMatch","checkPasswords","checkEmail","addNewUserToDB","Row","Col","Home","numOfTasks","setNumOfTusk","completed","setCompleted","inProgres","setInProgres","failed","setFailed","task","taskInfo","App","basename","path","component","exact","Boolean","hostname","match","addNewTask","action","allReducers","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","loadFromLocalStorage","store","createStore","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9666a255.chunk.js","sourcesContent":["export const login = () => {\r\n    return {\r\n        type: \"SIGN_IN\"\r\n    }\r\n}\r\n\r\nexport const addNewTask = (props) => {\r\n    return {\r\n        type: \"ADD_TASK\",\r\n        payload: props\r\n    }\r\n}\r\n\r\nexport const saveUserInLocalStore = (props) => {\r\n    return {\r\n        type: \"SAVE_USER_IN_STORE\",\r\n        payload: props\r\n    }\r\n}\r\n\r\nexport const getTasks = (props) => {\r\n    return {\r\n        type: \"GET_ALL_USER_TASKS\",\r\n        payload: props\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport '../styles/Menu.scss'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { login } from '../actions';\r\n\r\nexport default function Menu() {\r\n    const isLogged = useSelector(state => state.isLogged);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Navbar bg='primary' variant='dark' className='menuFixed'>\r\n            <Navbar.Brand href=\"/\">Tasker</Navbar.Brand>\r\n            \r\n            {isLogged \r\n                ? \r\n                <>\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#/Home\">Home</Nav.Link>\r\n                        <Nav.Link href=\"#/Tasks\">Tasks</Nav.Link>\r\n                    </Nav>\r\n                    <Nav.Link href=\"\" onClick={() => dispatch(login())} className='navLink'>Log Out</Nav.Link>\r\n                </>\r\n                : \r\n                    <Navbar.Collapse className='justify-content-end'>\r\n                        <Nav.Link href=\"#/SignIn\" className='navLink'>Sign In</Nav.Link>\r\n                        <Nav.Link href=\"#/SignUp\" className='navLink'>Sign Up</Nav.Link>\r\n                    </Navbar.Collapse>\r\n            }\r\n        </Navbar>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport '../styles/Landing.scss'\r\n\r\nexport default function Landing() {\r\n    return (\r\n        <div className='landing'>\r\n            \r\n            <div className='landing_box welcome animate__animated animate__bounce'>Welcome to Tasker!</div>\r\n            <div className='landing_box join animate__animated animate__bounceInRight animate__delay-1s'>Join to us</div>\r\n            <div className='landing_box create animate__animated animate__bounceInLeft animate__delay-2s'>Create your tasks</div>\r\n            <div className='landing_box save animate__animated animate__bounceInUp animate__delay-3s'>Save and edit them</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD1LAf3dzSq_SHuYb2qcWViMYJTXCJZDEM\",\r\n    authDomain: \"tasker-92659.firebaseapp.com\",\r\n    databaseURL: \"https://tasker-92659.firebaseio.com\",\r\n    projectId: \"tasker-92659\",\r\n    storageBucket: \"tasker-92659.appspot.com\",\r\n    messagingSenderId: \"793570878669\",\r\n    appId: \"1:793570878669:web:520dc0a5b1dc5011187584\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport { db };","import { db } from './firebase';\r\n\r\nexport const getCollectionWhere = (collection, field, operator, value) => {\r\n\r\n    return new Promise((res, rej) => {\r\n        db.collection(collection).where(field, operator, value)\r\n        .get()\r\n        .then(snapsot => {\r\n            const data = snapsot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }))\r\n            res(data)\r\n        })\r\n        .catch(error => {\r\n            rej(error)\r\n        });\r\n    })\r\n\r\n}\r\n\r\nexport const addNewUserToDB = (name, lastName, email, password) => {\r\n    db.collection(\"Users\").doc().set({\r\n        name: name,\r\n        lastName: lastName,\r\n        email: email,\r\n        password: password\r\n    })\r\n    .then(function() {\r\n        console.log(\"User successfully added!\");\r\n    })\r\n    .catch(function(error) {\r\n        console.error(\"Error adding user: \", error);\r\n    });\r\n}\r\n\r\nexport const addNewTaskToDB = (userId, title, describe) => {\r\n    db.collection(\"todos\").doc().set({\r\n        userId: userId,\r\n        title: title,\r\n        describe: describe,\r\n        status: 'in progress'\r\n    })\r\n    .then(function() {\r\n        console.log(\"Task successfully added!\");\r\n    })\r\n    .catch(function(error) {\r\n        console.error(\"Error adding task: \", error);\r\n    });\r\n}\r\n\r\nexport const editTaskFB = (id, title, describe, status) => {\r\n    db.collection(\"todos\").doc(id).update({\r\n        title: title,\r\n        describe: describe,\r\n        status: status\r\n    })\r\n    .then(function() {\r\n        console.log(\"Task successfully edited!\");\r\n    })\r\n    .catch(function(error) {\r\n        console.error(\"Error edit task: \", error);\r\n    });\r\n}\r\n\r\n","import React,  { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addNewTask, getTasks } from '../actions';\r\nimport { addNewTaskToDB, getCollectionWhere } from '../customFunctions';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport '../styles/AddNewTask.scss'\r\n\r\nexport default function AddNewTask() {\r\n\r\n    \r\n    const saveUserInStore = useSelector(state => state.saveUserInStore);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [describe, setDescribe] = useState(\"\");\r\n  \r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        console.log(`Title - ${title}. Describe - ${describe}.`)\r\n        const taskData = {title, describe, userId: saveUserInStore.id}\r\n        dispatch(addNewTask(taskData))\r\n        //add task to firebase\r\n        addNewTaskToDB(saveUserInStore.id, title, describe);\r\n        //redrow tasks\r\n        gettodos();\r\n        //clear form inputs\r\n        setTitle('');\r\n        setDescribe('');\r\n    }\r\n\r\n    const gettodos = () => {\r\n        const alltodos = getCollectionWhere('todos', 'userId', '==', saveUserInStore.id)\r\n        alltodos.then(\r\n            res => {\r\n                console.log(res)\r\n                dispatch(getTasks(res))\r\n            },\r\n            rej => {\r\n                console.log(rej)\r\n            }\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n           <div className=\"addNewTaskForm\">\r\n                <Form onSubmit={handleSubmit} className=\"form\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    \r\n                    <Form.Control \r\n                        type='text' \r\n                        value={title} \r\n                        onChange={e => setTitle(e.target.value)}\r\n                    />\r\n                    <Form.Label>Describe</Form.Label>\r\n\r\n                    <Form.Control \r\n                        as=\"textarea\" rows=\"3\"  \r\n                        value={describe} \r\n                        onChange={e => setDescribe(e.target.value)}\r\n                    />\r\n                    <Button type='submit'>Add new task</Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport AddNewTask from './AddNewTask';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getTasks } from '../actions';\r\nimport { getCollectionWhere, editTaskFB } from '../customFunctions';\r\nimport { db } from '../firebase';\r\n\r\nimport { Button, Table, Modal, Form } from 'react-bootstrap';\r\nimport '../styles/Tasks.scss';\r\n\r\n\r\nexport default function Tasks() {\r\n    //modal edit task\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [edit_id, setId] = useState('');\r\n    const [edit_title, setTitle] = useState('');\r\n    const [edit_describe, setDescribe] = useState('');\r\n    const [edit_status, setStatus] = useState('');\r\n\r\n    const saveUserInStore = useSelector(state => state.saveUserInStore);\r\n    const allUserTasks = useSelector(state => state.allUserTasks);\r\n    const [showForm, setShowForn] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n\r\n        db.collection('todos').where('userId', '==', saveUserInStore.id)\r\n        .get()\r\n        .then(snapsot => {\r\n            const todos = snapsot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }))\r\n            dispatch(getTasks(todos))\r\n        })\r\n        .catch(error => {\r\n            console.log('error getting doc:', error)\r\n        });\r\n        \r\n    }, []);\r\n    \r\n    const deleteTask = (id) => {\r\n        db.collection(\"todos\").doc(id).delete()\r\n        .then(() => {\r\n            console.log(\"Task successfully deleted!\");\r\n            gettodos()   \r\n        }).catch( err => {\r\n            console.error(\"Error removing task: \", err);\r\n        });\r\n    }\r\n    const editTask = (id) => {\r\n        db.collection('todos').doc(id)\r\n        .get()\r\n        .then( doc => {\r\n          if (doc.exists) {\r\n            let taskData = doc.data()\r\n            setId(id)\r\n            setTitle(taskData.title)\r\n            setDescribe(taskData.describe)\r\n            setStatus(taskData.status)\r\n            handleShow();\r\n          } else {\r\n            console.log(\"No such document!\");\r\n          }\r\n        })\r\n        .catch( err => {\r\n          console.log(\"Error getting document:\", err);\r\n        });\r\n    }\r\n\r\n    const saveEditedTask = () => {\r\n        console.log('try to edit task',edit_id, edit_title, edit_describe, edit_status);\r\n        editTaskFB(edit_id, edit_title, edit_describe, edit_status);\r\n        gettodos()\r\n        handleClose()\r\n    }\r\n\r\n    const gettodos = () => {\r\n        const alltodos = getCollectionWhere('todos', 'userId', '==', saveUserInStore.id)\r\n        alltodos.then(\r\n            res => {\r\n                console.log(res)\r\n                dispatch(getTasks(res))\r\n            },\r\n            rej => {\r\n                console.log(rej)\r\n            }\r\n        )\r\n    }\r\n    const togleAddTask = (data) => {\r\n        console.log(data)\r\n        setShowForn(!data)\r\n    }\r\n    return (\r\n        <div className='allTasks animate__animated'>\r\n            \r\n            <div className={showForm ? 'allTasks_Table_Active' : 'allTasks_Table'}>\r\n                <h1 align='center'>All tasks of user - {saveUserInStore.name} {saveUserInStore.lastname}</h1>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Title</th>\r\n                            <th>Describe</th>\r\n                            <th>Status</th>\r\n                            <th>Edit task</th>\r\n                            <th>Delete task</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {allUserTasks.map((item,index) => \r\n                            <tr key={index}>\r\n                                <td>{index+1}</td>\r\n                                <td>{item.title}</td>\r\n                                <td className='table_deskribe'>{item.describe}</td>\r\n\r\n                                {item.status === 'in progress' ? <td className='status_progress'><b>{item.status}</b></td> : null}\r\n                                {item.status === 'done' ? <td className='status_done'><b>{item.status}</b></td> : null}\r\n                                {item.status === 'failed' ? <td className='status_failed'><b>{item.status}</b></td> : null}\r\n\r\n                                <td><Button variant='warning' value={item.id} onClick={e => editTask(e.target.value)}>Edit</Button></td>\r\n                                <td><Button variant='danger' value={item.id} onClick={e => deleteTask(e.target.value)}>Delete</Button></td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n           \r\n            <div className={showForm ? 'allTasks_Add animate__animated animate__fadeOutRight' : 'allTasks_Add_Active animate__animated animate__fadeInRight'}>\r\n                <AddNewTask/>\r\n            </div>\r\n            <div className='togleForm' onClick={()=>togleAddTask(showForm)}>{showForm ? '<' : '>'}</div>\r\n\r\n            {/* Форма для редагування завдання*/}\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Editing task</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control   \r\n                            value={edit_title} \r\n                            onChange={e => setTitle(e.target.value)}\r\n                        />\r\n\r\n                        <Form.Label>Describe</Form.Label>\r\n                        <Form.Control \r\n                            as=\"textarea\" rows=\"4\"  \r\n                            value={edit_describe} \r\nk                            onChange={e => setDescribe(e.target.value)}\r\n                        />\r\n\r\n                        <Form.Label>Status</Form.Label>\r\n                        <Form.Control as=\"select\" value={edit_status} onChange={e => setStatus(e.target.value)}>\r\n                            <option>in progress</option>\r\n                            <option>done</option>\r\n                            <option>failed</option>\r\n                        </Form.Control>\r\n                        \r\n                    </Form>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={saveEditedTask}>\r\n                    Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport {Form, Button, Alert} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { login, saveUserInLocalStore } from '../actions';\r\nimport '../styles/SignIn.scss'\r\nimport { db } from '../firebase';\r\n\r\nexport default function SignIn(props) {\r\n    const isLogged = useSelector(state => state.isLogged);\r\n    const saveUserInStore = useSelector(state => state.saveUserInStore);\r\n    const dispatch = useDispatch();\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [errorUser, setErrorUser] = useState(false);\r\n    const [errorPass, setErrorPass] = useState(false);\r\n    const [email, setEmail] = useState(null);\r\n    const [password, setPassword] = useState(null);\r\n\r\n\r\n    //Get all users with that email\r\n    const checkUser = (email) => {\r\n        db.collection('Users').where(\"email\", \"==\", email)\r\n        .get()\r\n        .then(snapsot => {\r\n            const user = snapsot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }))\r\n            setUser(user);\r\n            //console.log(user)\r\n\r\n            //check email and password\r\n            if(user.length > 0){\r\n                console.log('user finded');\r\n\r\n                if(user[0].password === password){\r\n                    console.log('good password')\r\n                    console.log(user)\r\n                    \r\n                    dispatch(login())\r\n                    dispatch(saveUserInLocalStore(user[0]))\r\n                    window.location.hash = '#/Tasks';\r\n                }else{\r\n                    setErrorPass(true)\r\n                    setTimeout(()=>{setErrorPass(false)}, 3000)\r\n                }\r\n\r\n            }else{\r\n                console.log('user not finded');\r\n                setErrorUser(true)\r\n                setTimeout(()=>{setErrorUser(false)}, 3000)\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log('error getting doc:', error)\r\n        }); \r\n    }\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        console.log('try to sign in...', email, password);\r\n        checkUser(email)\r\n    }\r\n    return (\r\n        <div>\r\n            {console.log(user)}\r\n            {!isLogged ? (\r\n                <Form className=\"signIn\" onSubmit={handleSubmit}>\r\n                    <h1 align=\"center\">Sign In</h1>\r\n\r\n                    { errorUser \r\n                        ?  \r\n                        <Alert variant=\"danger\">\r\n                            User with that email not found!\r\n                        </Alert> \r\n                        : ''\r\n                    }\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\" \r\n                            placeholder=\"Enter email\" \r\n                            onChange={ e =>{setEmail(e.target.value)}}/>\r\n                    </Form.Group>\r\n\r\n\r\n                    { errorPass \r\n                        ?  \r\n                        <Alert variant=\"danger\">\r\n                           Wrong password!\r\n                        </Alert> \r\n                        : ''\r\n                    }\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            onChange={ e => {setPassword(e.target.value)}}/>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            ) : <h1 align=\"center\">You already logged as {saveUserInStore.name} {saveUserInStore.lastname}</h1>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport {Form, Button, Row, Col, Alert} from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport { getCollectionWhere, addNewUserToDB } from '../customFunctions';\r\nimport '../styles/SignUp.scss';\r\n\r\nexport default function SignUp() {\r\n    const isLogged = useSelector(state => state.isLogged);\r\n\r\n    const [name, setName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState(null)\r\n    const [password2, setPassword2] = useState(null)\r\n\r\n    const [emailUsed, setEmailUsed] = useState(true)\r\n    const [passwordMatch, setPasswordMatch] = useState(true)\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        console.log(`Sign Up User - ${name} ${lastName} with email ${email} and pasword ${password}`);\r\n        if(checkPasswords()){\r\n            console.log('pass much')\r\n           \r\n        }else{\r\n            console.log('pass not mucth')\r\n            setPasswordMatch(false)\r\n            setTimeout(()=>{setPasswordMatch(true)}, 3500)\r\n        }\r\n        checkEmail();\r\n\r\n    }\r\n\r\n    const checkPasswords = () => {\r\n        if(password === password2 && password !== null && password2 !== null) return true\r\n        return false\r\n    }\r\n    const checkEmail = () => {\r\n        const userWithThatEmail = getCollectionWhere('Users', 'email', '==', email);\r\n        userWithThatEmail\r\n        .then(\r\n            res => {\r\n                if(res.length > 0){\r\n                    setEmailUsed(false)\r\n                    setTimeout(()=>{setEmailUsed(true)}, 3500)\r\n                   \r\n                } else{\r\n                    const passGood = checkPasswords();\r\n                    if(passGood){\r\n                        console.log('registring new user')\r\n                        addNewUserToDB(name, lastName, email, password);\r\n                        window.location.hash = '#/SignIn'\r\n                    }\r\n                }\r\n            }\r\n        )\r\n        .catch(\r\n            rej => console.log(rej)\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            {!isLogged ? (\r\n                <Form className=\"signUp\" onSubmit={handleSubmit}>\r\n                    <h1 align=\"center\">Sign Up</h1>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Label>First name</Form.Label>\r\n                            <Form.Control \r\n                                placeholder=\"First name\"\r\n                                type=\"text\"\r\n                                onChange={ e =>{setName(e.target.value)}} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Label>Last name</Form.Label>\r\n                            <Form.Control \r\n                                placeholder=\"Last name\" \r\n                                type=\"text\"\r\n                                onChange={ e =>{setLastName(e.target.value)}}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    { !emailUsed \r\n                        ?  \r\n                        <Alert variant=\"danger\">\r\n                            User with this email already registred!\r\n                        </Alert> \r\n                        : ''\r\n                    }\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            onChange={ e =>{setEmail(e.target.value)}}\r\n                         />\r\n                    </Form.Group>\r\n\r\n                    { !passwordMatch \r\n                        ?  \r\n                        <Alert variant=\"danger\">\r\n                            Password didn't mutch!\r\n                        </Alert> \r\n                        : ''\r\n                    }\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"password\" \r\n                                    placeholder=\"Password\"\r\n                                    onChange={ e =>{setPassword(e.target.value)}} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group controlId=\"formBasicPassword2\">\r\n                                <Form.Label>Submit password</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"password\" \r\n                                    placeholder=\"Type a password again\" \r\n                                    onChange={ e =>{setPassword2(e.target.value)}}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            ) : <h1>You already logged in</h1>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button } from 'react-bootstrap';\r\nimport '../styles/Home.scss'\r\n\r\n\r\nexport default function Home() {\r\n    const isLogged = useSelector(state => state.isLogged);\r\n    const saveUserInStore = useSelector(state => state.saveUserInStore);\r\n    const allUserTasks = useSelector(state => state.allUserTasks);\r\n\r\n    const [numOfTasks, setNumOfTusk] = useState(0);\r\n    const [completed, setCompleted] = useState(0);\r\n    const [inProgres, setInProgres] = useState(0);\r\n    const [failed, setFailed] = useState(0);\r\n\r\n    const taskInfo = () =>{\r\n        setNumOfTusk(allUserTasks.length)\r\n        let completed = 0;\r\n        let inProgres = 0;\r\n        let failed = 0;\r\n\r\n        allUserTasks.map(task => {\r\n            console.log(task)\r\n            if(task.status === 'done'){\r\n                completed++\r\n            } if(task.status === 'in progress'){ \r\n                inProgres++\r\n            } if(task.status === 'failed') {\r\n                failed++\r\n            }\r\n        })\r\n        setCompleted(completed)\r\n        setInProgres(inProgres)\r\n        setFailed(failed)\r\n    }\r\n    \r\n    useEffect(() => taskInfo(),[])\r\n    return (\r\n        <div>\r\n            {console.log(allUserTasks)}\r\n            {!isLogged \r\n                ? \r\n                <h1 align='center'>Please sign in</h1>\r\n                : \r\n                <div className='mainInfoBlock animate__animated animate__bounceInUp'>\r\n                <div className='infoBlock'>\r\n                    <h1>Welcome back {saveUserInStore.name} {saveUserInStore.lastname}!</h1>\r\n                    <h2>\r\n                        You have {numOfTasks} tasks:<br/>\r\n                        <div className='lime'>{completed} - completed</div> \r\n                        <div className='yellow'>{inProgres} - in progress</div>\r\n                        <div className='red'>{failed} - failed</div>\r\n                    </h2>\r\n                    <br/>\r\n                    <Button type='allert'>Show my tasks</Button>\r\n                </div>\r\n                </div>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Menu from \"./componets/Menu\";\nimport Landing from \"./componets/Landing\";\nimport Tasks from \"./componets/Tasks\";\nimport SignIn from \"./componets/SignIn\";\nimport SignUp from \"./componets/SignUp\";\nimport Home from \"./componets/Home\";\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n        <Route path='/' component={Menu}/>\n        <Route exact path='/' component={Landing}/>\n        <Route exact path='/Home' component={Home}/>\n        <Route exact path='/Tasks' component={Tasks}/>\n        <Route exact path='/SignIn' component={SignIn}/>\n        <Route exact path='/SignUp' component={SignUp}/>\n    </HashRouter>        \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const addNewTask = (state = {}, action) => {\r\n    switch(action.type){\r\n        case 'ADD_TASK': \r\n            state = action.payload\r\n            return state\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default addNewTask;","const isLogged = (state = false, action) => {\r\n    switch(action.type){\r\n        case 'SIGN_IN': \r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default isLogged;","const saveUserInLocalStore = (state = [], action) => {\r\n    switch(action.type){\r\n        case 'SAVE_USER_IN_STORE': \r\n            state =  action.payload\r\n            return state\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default saveUserInLocalStore;","const allUserTasks = (state = [], action) => {\r\n    switch(action.type){\r\n        case 'GET_ALL_USER_TASKS': \r\n            state = action.payload\r\n            return state\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default allUserTasks;","import {combineReducers} from 'redux';\r\nimport addNewTask from './addNewTask';\r\nimport isLogged from './isLogged';\r\nimport saveUserInStore from './saveUserInStore';\r\nimport allUserTasks from './allUserTasks';\r\n\r\nconst allReducers = combineReducers({\r\n    addNewTask,\r\n    isLogged,\r\n    saveUserInStore,\r\n    allUserTasks\r\n})\r\n\r\nexport default allReducers;","import { createStore } from 'redux';\r\nimport allReducers from '../reducers/index';\r\n\r\nfunction saveToLocalStorage(state){\r\n    try{\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    } catch(e){\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nfunction loadFromLocalStorage(){\r\n    try{\r\n        const serializedState = localStorage.getItem('state');\r\n        if(serializedState === null)return undefined\r\n        return JSON.parse(serializedState)\r\n    } catch(e){\r\n        console.log(e)\r\n        return undefined\r\n    }  \r\n}\r\n\r\nconst persistedState = loadFromLocalStorage()\r\n\r\nconst store = createStore(\r\n    allReducers,\r\n    persistedState\r\n);\r\n\r\nstore.subscribe(()=>saveToLocalStorage(store.getState()))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './config/store';\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}